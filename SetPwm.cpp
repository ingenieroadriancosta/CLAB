WORD ValPwm( HWND );
////////////////////////////////////
BOOL InSPwm = FALSE;
////////////////////////////////////
BOOL SetPwm( BOOL SetDuty=TRUE ){//---------------------------------------------------------->>
IF InSPwm THEN
   return FALSE;
ENDIF;
InSPwm = TRUE;
BPwm1 = ValPwm( HWPwm1 );
BPwm2 = ValPwm( HWPwm2 );
////////////////////////////////////
////////////////////////////////////
BYTE  Msg2TAD[MaxNBTx+1];
Msg2TAD[0] = '{';
Msg2TAD[1] = 150;
Msg2TAD[2] = LOBYTE(BPwm1);
Msg2TAD[3] = HIBYTE(BPwm1);

Msg2TAD[4] = LOBYTE(BPwm2);
Msg2TAD[5] = HIBYTE(BPwm2);
Msg2TAD[6] = (BYTE)SetDuty;
Msg2TAD[MaxNBTx-1] = '}';
////////////////////////////////////
////////////////////////////////////
IF Connected THEN
   FOR int i=0; i<MaxNBTx; i++ LOOP
       HSerial.SendByte( Msg2TAD[i] );
       Sleep( 1 );
   ENDLOOP;
ELSIF OpenSerialProc()==1 THEN
   FOR int i=0; i<MaxNBTx; i++ LOOP
       HSerial.SendByte( Msg2TAD[i] );
       Sleep( 1 );
   ENDLOOP;
   HSerial.Close();
ENDIF;
//
InSPwm = FALSE;
return TRUE;
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
WORD ValPwm( HWND Hwnd ){
WORD WVal;
int IVal;
char Tex2I[16];
ZeroMemory( &Tex2I[0], 15 );
GetWindowText( Hwnd, &Tex2I[0], 15 );
IVal = atoi( &Tex2I[0] );
IF IVal>100 THEN
   IVal = 100;
   sprintf( Tex2I, "%i", IVal );
   SetWindowText( Hwnd, &Tex2I[0] );
ENDIF;
double DTVal = (double)IVal;
DTVal = 999.0 * DTVal;
DTVal = DTVal/100.0;
DTVal = round( DTVal );
WVal = (WORD)( DTVal );
IF WVal<=9 THEN
   //WVal = 1;
ENDIF;
return WVal;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
BOOL SendAny( BYTE DirA ){
BYTE  Msg2TAD[MaxNBTx+1];
ZeroMemory( &Msg2TAD[0], MaxNBTx );
Msg2TAD[0] = '{';
Msg2TAD[1] = DirA;
Msg2TAD[MaxNBTx-1] = '}';
FOR int i=0; i<MaxNBTx; i++ LOOP
    HSerial.SendByte( Msg2TAD[i] );
    Sleep( 1 );
ENDLOOP;
return TRUE;
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
BOOL PwmOff( void ){
BYTE  Msg2TAD[MaxNBTx+1];
ZeroMemory( &Msg2TAD[0], MaxNBTx );
Msg2TAD[0] = '{';
Msg2TAD[1] = 150;
Msg2TAD[6] = 1;
Msg2TAD[MaxNBTx-1] = '}';
FOR int i=0; i<MaxNBTx; i++ LOOP
    HSerial.SendByte( Msg2TAD[i] );
    Sleep( 1 );
ENDLOOP;
return TRUE;
}







